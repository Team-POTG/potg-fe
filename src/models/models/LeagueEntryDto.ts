/* tslint:disable */
/* eslint-disable */
/**
 * POTG
 * POTG RestAPI Document
 *
 * The version of the OpenAPI document: BETA1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MiniSeriesDto } from './MiniSeriesDto';
import {
    MiniSeriesDtoFromJSON,
    MiniSeriesDtoFromJSONTyped,
    MiniSeriesDtoToJSON,
} from './MiniSeriesDto';

/**
 * 
 * @export
 * @interface LeagueEntryDto
 */
export interface LeagueEntryDto {
    /**
     * 
     * @type {string}
     * @memberof LeagueEntryDto
     */
    leagueId: string;
    /**
     * 
     * @type {string}
     * @memberof LeagueEntryDto
     */
    summonerId: string;
    /**
     * 
     * @type {string}
     * @memberof LeagueEntryDto
     */
    summonerName: string;
    /**
     * 
     * @type {string}
     * @memberof LeagueEntryDto
     */
    queueType: string;
    /**
     * 
     * @type {string}
     * @memberof LeagueEntryDto
     */
    tier: string;
    /**
     * 
     * @type {string}
     * @memberof LeagueEntryDto
     */
    rank: string;
    /**
     * 
     * @type {number}
     * @memberof LeagueEntryDto
     */
    leaguePoints: number;
    /**
     * 
     * @type {number}
     * @memberof LeagueEntryDto
     */
    wins: number;
    /**
     * 
     * @type {number}
     * @memberof LeagueEntryDto
     */
    losses: number;
    /**
     * 
     * @type {boolean}
     * @memberof LeagueEntryDto
     */
    hotStreak: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LeagueEntryDto
     */
    veteran: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LeagueEntryDto
     */
    freshBlood: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LeagueEntryDto
     */
    inactive: boolean;
    /**
     * 
     * @type {MiniSeriesDto}
     * @memberof LeagueEntryDto
     */
    miniSeries: MiniSeriesDto;
}

/**
 * Check if a given object implements the LeagueEntryDto interface.
 */
export function instanceOfLeagueEntryDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "leagueId" in value;
    isInstance = isInstance && "summonerId" in value;
    isInstance = isInstance && "summonerName" in value;
    isInstance = isInstance && "queueType" in value;
    isInstance = isInstance && "tier" in value;
    isInstance = isInstance && "rank" in value;
    isInstance = isInstance && "leaguePoints" in value;
    isInstance = isInstance && "wins" in value;
    isInstance = isInstance && "losses" in value;
    isInstance = isInstance && "hotStreak" in value;
    isInstance = isInstance && "veteran" in value;
    isInstance = isInstance && "freshBlood" in value;
    isInstance = isInstance && "inactive" in value;
    isInstance = isInstance && "miniSeries" in value;

    return isInstance;
}

export function LeagueEntryDtoFromJSON(json: any): LeagueEntryDto {
    return LeagueEntryDtoFromJSONTyped(json, false);
}

export function LeagueEntryDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LeagueEntryDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'leagueId': json['leagueId'],
        'summonerId': json['summonerId'],
        'summonerName': json['summonerName'],
        'queueType': json['queueType'],
        'tier': json['tier'],
        'rank': json['rank'],
        'leaguePoints': json['leaguePoints'],
        'wins': json['wins'],
        'losses': json['losses'],
        'hotStreak': json['hotStreak'],
        'veteran': json['veteran'],
        'freshBlood': json['freshBlood'],
        'inactive': json['inactive'],
        'miniSeries': MiniSeriesDtoFromJSON(json['miniSeries']),
    };
}

export function LeagueEntryDtoToJSON(value?: LeagueEntryDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'leagueId': value.leagueId,
        'summonerId': value.summonerId,
        'summonerName': value.summonerName,
        'queueType': value.queueType,
        'tier': value.tier,
        'rank': value.rank,
        'leaguePoints': value.leaguePoints,
        'wins': value.wins,
        'losses': value.losses,
        'hotStreak': value.hotStreak,
        'veteran': value.veteran,
        'freshBlood': value.freshBlood,
        'inactive': value.inactive,
        'miniSeries': MiniSeriesDtoToJSON(value.miniSeries),
    };
}

