/* tslint:disable */
/* eslint-disable */
/**
 * POTG
 * POTG RestAPI Document
 *
 * The version of the OpenAPI document: BETA1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface GetMatchRequest {
    puuid: string;
    count: number;
    region: GetMatchRegionEnum;
}

/**
 * 
 */
export class MatchApi extends runtime.BaseAPI {

    /**
     * 
     */
    async getMatchRaw(requestParameters: GetMatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.puuid === null || requestParameters.puuid === undefined) {
            throw new runtime.RequiredError('puuid','Required parameter requestParameters.puuid was null or undefined when calling getMatch.');
        }

        if (requestParameters.count === null || requestParameters.count === undefined) {
            throw new runtime.RequiredError('count','Required parameter requestParameters.count was null or undefined when calling getMatch.');
        }

        if (requestParameters.region === null || requestParameters.region === undefined) {
            throw new runtime.RequiredError('region','Required parameter requestParameters.region was null or undefined when calling getMatch.');
        }

        const queryParameters: any = {};

        if (requestParameters.region !== undefined) {
            queryParameters['region'] = requestParameters.region;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/potg/lol/matches/by-puuid/{puuid}`.replace(`{${"puuid"}}`, encodeURIComponent(String(requestParameters.puuid))).replace(`{${"count"}}`, encodeURIComponent(String(requestParameters.count))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 
     */
    async getMatch(requestParameters: GetMatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.getMatchRaw(requestParameters, initOverrides);
    }

}

/**
 * @export
 */
export const GetMatchRegionEnum = {
    Americas: 'AMERICAS',
    Asia: 'ASIA',
    Europe: 'EUROPE',
    Sea: 'SEA'
} as const;
export type GetMatchRegionEnum = typeof GetMatchRegionEnum[keyof typeof GetMatchRegionEnum];
